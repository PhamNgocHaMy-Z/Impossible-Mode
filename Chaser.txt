local plr = game.Players.LocalPlayer
local chr = plr.Character or plr.CharacterAdded:Wait()
local TweenService = game:GetService("TweenService")
local hum = chr:FindFirstChild("Humanoid")
local Move = true 

local s = game:GetObjects("rbxassetid://95686572728139")[1]
s.Parent = workspace
local primary_part = s:FindFirstChildWhichIsA("BasePart") or s:FindFirstChildWhichIsA("Part")
entity = primary_part
entity.CFrame = chr.HumanoidRootPart.CFrame * CFrame.new(0, 0, 20)
entity.CanCollide = false
entity.Anchored = true

local function Moving(target, dur)
    local tween_info = TweenInfo.new(dur, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(entity, tween_info, {CFrame = target})
    tween:Play()
    tween.Completed:Wait()
end

task.spawn(function()
while true do wait(3)

local tweenservice = game:GetService("TweenService")
local light = entity.Face.PointLight
local radio = entity:WaitForChild("Radio Static Sound")
tweenservice:Create(light,TweenInfo.new(3,Enum.EasingStyle.Linear),{Range = math.random(10, 25)}):Play()
tweenservice:Create(light,TweenInfo.new(3,Enum.EasingStyle.Linear),{Brightness = math.random(5, 50)}):Play()

tweenservice:Create(radio,TweenInfo.new(3,Enum.EasingStyle.Linear),{Volume = math.random(5, 10)}):Play()
tweenservice:Create(radio,TweenInfo.new(3,Enum.EasingStyle.Linear),{PlaybackSpeed = math.random(1, 5)}):Play()

end
end)

wait(5)
task.spawn(function()
while Move == true do
wait(1)
Moving(chr.HumanoidRootPart.CFrame, 2)
end
end)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local HumanoidRootPart = character:WaitForChild("HumanoidRootPart")

local death = true

spawn(function()
while task.wait() do
if death == true then

local monster = entity
local target = HumanoidRootPart
local origin = monster.Position
local direction = (target.Position - origin).Unit
local ray = Ray.new(origin, direction * 3)
local raycast = workspace:Raycast(ray.Origin, ray.Direction)

if raycast and raycast.Instance.Parent == character then
if not character:GetAttribute("Hiding") then

game.Players.LocalPlayer.Character.Humanoid:TakeDamage(1000)
game:GetService("ReplicatedStorage").GameStats["Player_".. game.Players.LocalPlayer.Name].Total.DeathCause.Value = "Chaser"

end
end

end
end
end)

wait(30)
Move = false
Moving(entity.CFrame * CFrame.new(0, -100, 0), 3)
wait(1)
s:Destroy()