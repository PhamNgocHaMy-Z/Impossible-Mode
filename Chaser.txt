
local Speed = 18

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService")

local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
		local Dummy = game:GetObjects("rbxassetid://96223289630255")[1]
		local s = game:GetObjects("rbxassetid://95686572728139")[1]
		
		s:FindFirstChildWhichIsA("BasePart").CanCollide = false
        s:FindFirstChildWhichIsA("BasePart").Anchored = true
        
		Dummy.Parent = workspace
		s.Parent = workspace

		Dummy.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame + Vector3.new(math.random(-20, 20), 0, math.random(-20, 20))
        wait(1)
		local function followPlayer()
			local Direction = (Character.HumanoidRootPart.Position - Dummy.HumanoidRootPart.Position).unit
			Dummy.HumanoidRootPart.Velocity = Direction * Speed
			Dummy.HumanoidRootPart.CFrame = CFrame.new(Dummy.HumanoidRootPart.Position, Character.HumanoidRootPart.Position)
		end

		RunService.RenderStepped:Connect(function()
			if s:IsDescendantOf(workspace) and Dummy:IsDescendantOf(workspace) and Dummy:FindFirstChild("HumanoidRootPart") and Dummy:FindFirstChild("Humanoid").Health > 0 then
				local Distance = (Character.HumanoidRootPart.Position - Dummy.HumanoidRootPart.Position).magnitude

				if Distance <= math.huge then
					followPlayer()
				end

				s:PivotTo(Dummy.HumanoidRootPart.CFrame * CFrame.new(0,-3,0))
			end
		end)
		
local primary_part = s:FindFirstChildWhichIsA("BasePart") or s:FindFirstChildWhichIsA("Part")
entity = primary_part

task.spawn(function()
while true do wait(3)

local tweenservice = game:GetService("TweenService")
local light = entity.Face.PointLight
local radio = entity:WaitForChild("Radio Static Sound")
tweenservice:Create(light,TweenInfo.new(3,Enum.EasingStyle.Linear),{Range = math.random(10, 25)}):Play()
tweenservice:Create(light,TweenInfo.new(3,Enum.EasingStyle.Linear),{Brightness = math.random(5, 50)}):Play()

tweenservice:Create(radio,TweenInfo.new(3,Enum.EasingStyle.Linear),{Volume = 2}):Play()
tweenservice:Create(radio,TweenInfo.new(3,Enum.EasingStyle.Linear),{PlaybackSpeed = math.random(1, 5)}):Play()

for _,v in pairs(Dummy:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
end
		
end
end)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local HumanoidRootPart = character:WaitForChild("HumanoidRootPart")

local death = true

spawn(function()
while task.wait() do
if death == true then

local monster = entity
local target = HumanoidRootPart
local origin = Dummy.HumanoidRootPart.Position
local direction = (target.Position - origin).Unit
local ray = Ray.new(origin, direction * 5)
local raycast = workspace:Raycast(ray.Origin, ray.Direction)

if raycast and raycast.Instance.Parent == character then
if not character:GetAttribute("Hiding") then

game.Players.LocalPlayer.Character.Humanoid:TakeDamage(1000)
game:GetService("ReplicatedStorage").GameStats["Player_".. game.Players.LocalPlayer.Name].Total.DeathCause.Value = "Chaser"

end
end

end
end
end)

wait(30)
death = false
s:Destroy()
Dummy:Destroy()
